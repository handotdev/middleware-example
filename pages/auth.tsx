import Cookies from "js-cookie";
import { Layout } from "@vercel/examples-ui";
import Head from "next/head";
import { useState, KeyboardEvent } from "react";
import { addDays } from "date-fns";

export default function Auth() {
  const [pwinput, setPwinput] = useState("");

  const setPassword = () => {
    Cookies.set("docs-totp-auth", pwinput, { expires: addDays(new Date(), 7) });
    window.location.replace("/");
  };

  const handleKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {
    if (event.key === "Enter") {
      setPassword();
    }
  };

  return (
    <>
      <Head>
        <title>Name - Documentation</title>
        <link rel="icon" href="/proxy_assets/favicon.svg"></link>
      </Head>
      <style jsx global>
        {`
          @import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap");

          #__next {
            @apply bg-zinc-50 h-full;
          }
        `}
      </style>
      <main className="bg-[#eff2f5] min-h-screen">
        <div className="max-w-[395px] mx-auto py-16 grid gap-8 ">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="192"
            height="32"
            viewBox="0 0 192 32"
            fill="none"
            className="logo logo--light"
          >
            <g className="logo__icon">
              <path
                d="M2.54933 10.0794H21.6693L5.58093 30.5211C5.09756 31.1353 4.35919 31.4938 3.57763 31.4938H0L2.54933 10.0794Z"
                fill="#141533"
                className="logo__icon__one"
              ></path>{" "}
              <path
                d="M24.8161 10.0794H8.4127L24.5011 30.5211C24.9845 31.1353 25.7228 31.4938 26.5044 31.4938H30.082L27.8538 12.7769C27.6706 11.2381 26.3658 10.0794 24.8161 10.0794Z"
                fill="#43E4D9"
                className="logo__icon__two"
              ></path>
            </g>{" "}
            <g className="logo__name">
              <path
                d="M51.8286 31.3772C51.3097 31.5329 50.6609 31.6627 49.8825 31.7665C49.1299 31.8703 48.3255 31.9222 47.4692 31.9222C46.535 31.9222 45.6657 31.8313 44.8613 31.6497C44.0569 31.494 43.3433 31.2086 42.7205 30.7934C42.1237 30.3522 41.6566 29.7684 41.3193 29.0418C40.982 28.2893 40.8133 27.3551 40.8133 26.2393V14.8347H38.4V10.0861H40.8133V5.60985H47.5081V10.0861H51.7508V14.8347H47.5081V24.9548C47.5081 25.6814 47.6768 26.1874 48.0141 26.4729C48.3774 26.7583 48.9094 26.901 49.61 26.901C49.9733 26.901 50.3366 26.8751 50.6999 26.8232C51.0631 26.7453 51.3616 26.6805 51.5951 26.6286L51.8286 26.5725L51.8286 31.3772Z"
                fill="#141533"
                className="logo__name__t logo__name__t--one"
              ></path>{" "}
              <path
                d="M68.2796 28.8861C67.5271 29.7165 66.6318 30.4431 65.5939 31.0658C64.5559 31.6886 63.2585 32 61.7015 32C59.5737 32 57.8351 31.3902 56.4858 30.1706C55.1624 28.925 54.5007 27.0308 54.5007 24.4878V10.0861H61.1955V23.3979C61.1955 24.6175 61.481 25.4738 62.0518 25.9669C62.6227 26.4599 63.3752 26.7064 64.3094 26.7064C65.6847 26.7064 66.8784 26.3172 67.8904 25.5387V10.0861H74.5852V31.494H70.691C69.5472 31.494 68.5718 30.6656 68.3865 29.5369L68.2796 28.8861Z"
                fill="#141533"
                className="logo__name__u"
              ></path>{" "}
              <path
                d="M90.0579 16.1581C88.8383 16.1581 87.8133 16.2879 86.983 16.5474C86.1785 16.7809 85.4649 17.235 84.8422 17.9097V31.494H78.1473V10.0861H81.9686C83.144 10.0861 84.1363 10.9597 84.2852 12.1257L84.4919 13.7449C84.7773 13.2518 85.1146 12.7718 85.5039 12.3047C85.8931 11.8117 86.3342 11.3835 86.8273 11.0202C87.3203 10.631 87.8652 10.3196 88.4621 10.0861C89.0848 9.85252 89.7465 9.73575 90.4472 9.73575C90.7845 9.73575 91.0959 9.74872 91.3813 9.77467C91.6927 9.80062 91.9522 9.83954 92.1598 9.89144L92.1598 16.425L91.9263 16.3527C91.3554 16.223 90.7326 16.1581 90.0579 16.1581Z"
                fill="#141533"
                className="logo__name__r"
              ></path>{" "}
              <path
                d="M104.727 14.8736C104.053 14.8736 103.43 14.9774 102.859 15.185C102.314 15.3926 101.782 15.704 101.263 16.1192V31.494H94.5682V10.0861H98.4399C99.5935 10.0861 100.574 10.9284 100.749 12.0688L100.874 12.8886C101.237 12.4734 101.639 12.0712 102.08 11.6819C102.522 11.2667 103.015 10.9035 103.56 10.5921C104.104 10.2807 104.701 10.0342 105.35 9.85251C106.025 9.67087 106.777 9.58005 107.608 9.58005C108.594 9.58005 109.502 9.72277 110.332 10.0082C111.189 10.2936 111.915 10.7478 112.512 11.3705C113.135 11.9674 113.615 12.7458 113.952 13.7059C114.315 14.6401 114.497 15.7689 114.497 17.0923V31.494H107.763V18.1821C107.763 16.9625 107.478 16.1062 106.907 15.6132C106.362 15.1202 105.635 14.8736 104.727 14.8736Z"
                fill="#141533"
                className="logo__name__n"
              ></path>{" "}
              <path
                d="M124.523 31.9611C122.707 31.9611 121.215 31.7924 120.047 31.4551C118.905 31.0918 117.906 30.6507 117.05 30.1317L117.05 24.8075L117.283 24.9938C118.166 25.6684 119.178 26.2004 120.319 26.5896C121.461 26.9789 122.681 27.1735 123.978 27.1735C125.042 27.1735 125.821 27.0178 126.314 26.7064C126.807 26.3691 127.053 25.915 127.053 25.3441C127.053 24.8251 126.872 24.4618 126.508 24.2542C126.171 24.0207 125.522 23.7871 124.562 23.5536L122.655 23.0865C120.942 22.6713 119.567 21.9577 118.529 20.9457C117.491 19.9078 116.972 18.4416 116.972 16.5474C116.972 14.4195 117.712 12.7199 119.191 11.4484C120.67 10.1769 122.72 9.54113 125.341 9.54113C126.768 9.54113 128.013 9.64492 129.077 9.85251C130.141 10.0601 131.088 10.3455 131.919 10.7088L131.919 15.7825L131.685 15.6521C130.933 15.2629 130.024 14.9385 128.96 14.679C127.923 14.3936 126.781 14.2509 125.535 14.2509C124.523 14.2509 123.823 14.3936 123.433 14.679C123.07 14.9645 122.888 15.3667 122.888 15.8857C122.888 16.3787 123.044 16.755 123.355 17.0144C123.667 17.248 124.186 17.4556 124.912 17.6372L126.82 18.1043C127.91 18.3897 128.857 18.7011 129.661 19.0385C130.466 19.3758 131.14 19.791 131.685 20.284C132.23 20.7771 132.632 21.3739 132.892 22.0745C133.151 22.7492 133.281 23.5795 133.281 24.5656C133.281 26.927 132.502 28.7564 130.946 30.0538C129.389 31.3253 127.248 31.9611 124.523 31.9611Z"
                fill="#141533"
                className="logo__name__s"
              ></path>{" "}
              <path
                d="M147.959 31.3772C147.44 31.5329 146.791 31.6627 146.013 31.7665C145.26 31.8703 144.456 31.9222 143.6 31.9222C142.666 31.9222 141.796 31.8313 140.992 31.6497C140.187 31.494 139.474 31.2086 138.851 30.7934C138.254 30.3522 137.787 29.7684 137.45 29.0418C137.112 28.2893 136.944 27.3551 136.944 26.2393V14.8347H134.53V10.0861H136.944V5.60985H143.639V10.0861H151.258V14.8347H143.639V24.9548C143.639 25.6814 143.807 26.1874 144.145 26.4729C144.508 26.7583 145.04 26.901 145.74 26.901C146.104 26.901 146.467 26.8751 146.83 26.8232C147.194 26.7453 147.492 26.6805 147.726 26.6286L147.959 26.5725L147.959 31.3772Z"
                fill="#141533"
                className="logo__name__t logo__name__t--two"
              ></path>{" "}
              <g className="logo__name__i">
                <path
                  d="M158.137 3.94101C158.137 6.11756 156.373 7.88201 154.196 7.88201C152.019 7.88201 150.255 6.11756 150.255 3.94101C150.255 1.76445 152.019 0 154.196 0C156.373 0 158.137 1.76445 158.137 3.94101Z"
                  fill="#141533"
                  className="logo__name__i__dot"
                ></path>{" "}
                <path
                  d="M150.865 10.0861H157.56V31.494H150.865V10.0861Z"
                  fill="#141533"
                  className="logo__name__i__pillar"
                ></path>
              </g>{" "}
              <path
                d="M161.319 2.26243H168.014V31.494H161.319V2.26243Z"
                fill="#141533"
                className="logo__name__l"
              ></path>{" "}
              <path
                d="M181.424 14.0952C180.334 14.0952 179.439 14.4195 178.738 15.0683C178.038 15.717 177.57 16.7679 177.337 18.2211H184.849C184.771 16.8198 184.46 15.7819 183.915 15.1072C183.37 14.4325 182.54 14.0952 181.424 14.0952ZM190.532 30.4041C189.805 30.7934 188.806 31.1567 187.535 31.494C186.263 31.8313 184.693 32 182.825 32C178.725 32 175.676 30.988 173.678 28.964C171.68 26.9399 170.681 24.1504 170.681 20.5954C170.681 18.9866 170.928 17.5075 171.421 16.1581C171.94 14.8088 172.666 13.654 173.6 12.6939C174.534 11.7079 175.663 10.9424 176.987 10.3974C178.31 9.85252 179.776 9.58005 181.385 9.58005C182.942 9.58005 184.356 9.82657 185.628 10.3196C186.899 10.8126 187.963 11.5781 188.819 12.6161C189.676 13.654 190.298 14.9904 190.688 16.6252C191.077 18.234 191.168 20.1672 190.96 22.4248H177.259C177.519 24.0596 178.141 25.2273 179.127 25.9279C180.139 26.6286 181.58 26.9789 183.448 26.9789C184.953 26.9789 186.224 26.8361 187.262 26.5507C188.326 26.2393 189.325 25.8631 190.26 25.4219L190.532 25.2925L190.532 30.4041Z"
                fill="#141533"
                className="logo__name__e"
              ></path>
            </g>
          </svg>
          <div className="grid gap-4 p-6 rounded-lg bg-white shadow-card">
            <h2 className="text-h400 font-semibold">Enter Access Code</h2>
            <label className="w-full h-9 px-2 flex items-center text-zinc-400 bg-white rounded-md border-solid border-zinc-300 outline outline-2 outline-zinc-300">
              <input
                value={pwinput}
                onChange={(e) => setPwinput(e.target.value)}
                onKeyDown={handleKeyDown}
                className="grow w-full h-full border-none outline-none text-zinc-900"
              ></input>
            </label>
            <button
              onClick={setPassword}
              className="apply grid grid-flow-col gap-2 items-center text-sm py-2 px-4 rounded-md outline-none font-medium outline-offset-0 bg-[#43e4d9] text-black hover:bg-[#3cd0c6]"
            >
              Access
            </button>
          </div>
        </div>
      </main>
    </>
  );
}

Auth.Layout = Layout;
